buildscript {
    ext { springBootVersion = '1.3.5.RELEASE' }
    repositories { mavenCentral() }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// needed for logging module
configurations { compile.exclude module: 'spring-boot-starter-logging' }


dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Brixton.RELEASE'
        mavenBom 'org.springframework.cloud:spring-cloud-consul-dependencies:1.0.1.RELEASE'
        mavenBom 'org.springframework.cloud:spring-cloud-sleuth:1.0.1.RELEASE'
    }
}

jar { version = '0.1.0-SNAPSHOT' }

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework:spring-tx')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    // needed for logging module (see https://in.talend.com/13997111)
    compile ('org.springframework.boot:spring-boot-starter-log4j')

    // needed for security module
    compile ('org.talend.iam:security-filter:1-+')

    compile "io.springfox:springfox-swagger-ui:\$springfoxSwaggerVersion"
    compile "io.springfox:springfox-swagger2:\$springfoxSwaggerVersion"
    testCompile("io.rest-assured:rest-assured:\$restAssuredVersion")
    testCompile("io.rest-assured:json-path:\$restAssuredVersion")
    testCompile("io.rest-assured:spring-mock-mvc:\$restAssuredVersion")
    testCompile("uk.co.datumedge:hamcrest-json:\$hamcrestVersion")
}

docker { maintainer = 'Talend' }

task buildDocker(type: Docker, dependsOn: build) {
    //push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    tagVersion = 'latest'
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
